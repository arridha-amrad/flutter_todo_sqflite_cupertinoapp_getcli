 child: SafeArea(
        child: Stack(children: [
          Positioned(
            bottom: 0,
            left: 0,
            right: 0,
            child: SizedBox(
              width: double.infinity,
              child: CupertinoButton(
                  color: CupertinoColors.systemRed,
                  borderRadius: BorderRadius.zero,
                  child: const Text("Delete"),
                  onPressed: () {
                    controller.deleteTodo();
                    Get.back();
                  }),
            ),
          ),
          Container(
            child: ListView(
              scrollDirection: Axis.vertical,
              children: [
                Padding(
                  padding: const EdgeInsets.symmetric(
                      horizontal: 16, vertical: 12.0),
                  child: CupertinoFormRow(
                    padding: EdgeInsets.zero,
                    child: Text(DateFormat.jm().format(controller.createdAt)),
                    prefix: const Text("Created At"),
                  ),
                ),
                controller.updatedAt != null
                    ? Padding(
                        padding: const EdgeInsets.symmetric(
                            horizontal: 16, vertical: 12.0),
                        child: CupertinoFormRow(
                          padding: EdgeInsets.zero,
                          child: Text(
                              DateFormat.jm().format(controller.updatedAt!)),
                          prefix: const Text("Updated At"),
                        ),
                      )
                    : const SizedBox(),
                Obx(() => Padding(
                      padding: const EdgeInsets.symmetric(
                          horizontal: 16, vertical: 12.0),
                      child: CupertinoFormRow(
                          padding: EdgeInsets.zero,
                          prefix: const Text("Complete"),
                          child: CupertinoSwitch(
                              value: controller.isComplete.value,
                              onChanged: (bool? val) {
                                !controller.isComplete.value
                                    ? showCupertinoDialog(
                                        context: context,
                                        builder: (context) {
                                          return CupertinoAlertDialog(
                                            title: const Text(
                                                "Have you complete this todo?"),
                                            content: const Text(
                                                "This process cannot be undo. If you have complete this task. Please continue"),
                                            actions: [
                                              CupertinoButton(
                                                child: const Text("Cancel"),
                                                onPressed: () => Get.back(),
                                              ),
                                              CupertinoButton(
                                                  child: const Text("Continue"),
                                                  onPressed: () async {
                                                    controller.isComplete
                                                        .value = true;
                                                    Get.back();
                                                    _updateTodo(controller);
                                                  })
                                            ],
                                          );
                                        },
                                      )
                                    : null;
                              })),
                    )),
                CupertinoTextField(
                  readOnly: controller.isComplete.value,
                  padding: const EdgeInsets.symmetric(
                      horizontal: 16.0, vertical: 12.0),
                  controller: controller.titleController,
                  placeholder: "todo title...",
                ),
                Expanded(
                    child: CupertinoTextField(
                  decoration: BoxDecoration(
                      border: Border.all(
                    width: 0,
                    color: Colors.transparent,
                  )),
                  readOnly: controller.isComplete.value,
                  expands: true,
                  minLines: null,
                  maxLines: null,
                  padding: const EdgeInsets.symmetric(
                      horizontal: 16.0, vertical: 12.0),
                  controller: controller.descriptionController,
                  textAlignVertical: TextAlignVertical.top,
                  placeholder: "todo description...",
                )),
              ],
            ),
          ),
        ]),
      ),